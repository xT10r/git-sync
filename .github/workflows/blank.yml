# This is a basic workflow to help you get started with Actions

name: CI-demo

on:
  push:
    branches: [ "develop-action" ]
  pull_request:
    branches: [ "develop-action" ]

jobs:
  build:
    name: Build, Test and Deploy
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4.1.7

    # Set up Go environment
    - name: Set up Go
      uses: actions/setup-go@v5.0.1
      with:
        go-version: '1.21'

    # Cache Go modules
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

    # Install dependencies
    - name: Install dependencies
      run: go mod download

    # Run tests
    - name: Run tests
      run: go test -cover ./...

    # Build for Linux x64
    - name: Build for Linux x64
      run: |
        mkdir -p build/linux/x64
        GOOS=linux GOARCH=amd64 go build -o build/linux/x64/git-sync ./cmd/

    # Build for Windows x64
    - name: Build for Windows x64
      run: |
        mkdir -p build/windows/x64
        GOOS=windows GOARCH=amd64 go build -o build/windows/x64/git-sync.exe ./cmd/

    # Build for OSX x64
    - name: Build for OSX x64
      run: |
        mkdir -p build/macos
        GOOS=darwin GOARCH=amd64 go build -o build/osx/x64/git-sync ./cmd/
        
    # Upload artifacts
    - name: Upload Linux x64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: git-sync-linux-amd64
        path: build/linux/x64/git-sync

    - name: Upload Windows x64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: git-sync-windows-amd64
        path: build/windows/x64/git-sync.exe

    - name: Upload OSX x64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: git-sync-osx-amd64
        path: build/osx/x64/git-sync

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Login docker registry
    - name: Log in to Docker Hub
      if: success() && startsWith(github.ref, 'refs/tags/')
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Publish Docker image
    - name: Build and push Docker image
      if: startsWith(github.ref, 'refs/tags/')
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          xt10r/git-sync:latest
          xt10r/git-sync:${{ github.ref_name }}

    # Clean Docker images
    - name: Clean up
      run: |
        docker image prune -f
